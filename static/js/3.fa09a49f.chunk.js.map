{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","name","path","className","styles","dialog","active","to","Message","message","friend","color","style","textAlign","maxLength50","maxLenghtCreator","AddMessageFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","validate","required","placeholder","Button","text","type","Dialogs","dialogsPage","sendMessage","messageId","dialogs","messages","dialogsItem","map","d","id","filter","m","values","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,4B,6FCe7HC,EAXI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChBC,EAAO,YAAcD,EAEzB,OACE,qBAAKE,UAAWC,IAAOC,OAAS,IAAMD,IAAOE,OAA7C,SACE,cAAC,IAAD,CAASC,GAAIL,EAAb,SAAoBD,OCOXO,EAdC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OACpBC,EAAQD,EAAS,SAAW,OAElC,OACE,qBACEP,UAAWC,IAAOK,QAClBG,MAAO,CACLD,MAAOA,EACPE,UAAU,GAAD,OAAKH,GAAU,UAJ5B,SAMED,K,yCCJAK,EAAcC,YAAiB,IAsD/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAdL,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aACxB,OACI,uBAAMC,SAAUD,EAAhB,UACE,cAACE,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBY,YAAY,qBACZzB,KAAM,mBAEV,cAAC0B,EAAA,EAAD,CAAQC,KAAM,OAAQC,KAAM,iBAOrBC,EAtDC,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAEzCC,EAEEH,EAFFG,QACAC,EACEJ,EADFI,SAOF,OACI,sBAAKhC,UAAWC,IAAOgC,YAAvB,UACE,qBAAKjC,UAAWC,IAAO8B,QAAvB,SACGA,EAAQG,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAAuBrC,KAAMqC,EAAErC,KAAMsC,GAAID,EAAEC,IAA1BD,EAAEC,SAGzB,qBAAKpC,UAAWC,IAAO+B,SAAvB,SACGF,GAAaE,EACTK,QAAO,SAAAC,GAAC,OAAIA,EAAEF,KAAON,KACrBI,KAAI,qBAAGF,SAAwBE,KAAI,SAAA5B,GAAO,OACnC,cAAC,EAAD,CAEIA,QAASA,EAAQA,QACjB8B,GAAI9B,EAAQ8B,GACZ7B,OAAyB,SAAjBD,EAAQoB,MAHXpB,EAAQ8B,YAS/B,8BACE,cAACvB,EAAD,CAAqBI,SA1BP,SAACsB,GACrBV,EAAYC,EAAWS,EAAOC,yB,yBCEnBC,sBACXC,aAfkB,SAAC,GACrB,MAAO,CACLd,YAFmC,EAAdG,YAMA,SAACY,GACxB,MAAO,CACLd,YAAa,SAACC,EAAWU,GACvBG,EAASC,YAAmBd,EAAWU,SASzCK,IAJWJ,CAKbd","file":"static/js/3.fa09a49f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItem\":\"Dialogs_dialogsItem__155KC\",\"dialogs\":\"Dialogs_dialogs__37Umt\",\"active\":\"Dialogs_active__3CyIY\",\"messages\":\"Dialogs_messages__1H8j8\"};","import React from 'react'\nimport styles from './../Dialogs.module.css'\nimport { NavLink } from 'react-router-dom'\n\n\nconst DialogItem = ({ name }) => {\n  let path = '/dialogs/' + name\n\n  return (\n    <div className={styles.dialog + ' ' + styles.active}>\n      <NavLink to={path}>{name}</NavLink>\n    </div>\n  )\n}\n\n\nexport default DialogItem","import React  from 'react'\nimport styles from './../Dialogs.module.css'\n\nconst Message = ({ message, friend}) => {\n  const color = friend ? 'purple' : 'blue'\n\n  return (\n    <div\n      className={styles.message}\n      style={{\n        color: color,\n        textAlign: `${friend && 'right'}`\n      }}\n    >{message}</div>\n  )\n}\n\nexport default Message","import React from 'react'\nimport styles from './Dialogs.module.css'\nimport DialogItem from './DialogItem/DialogItem'\nimport Message from './Message/Message'\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../Common/FormControls'\nimport { maxLenghtCreator, required } from '../utilits/Validators/validators'\nimport Button from '../shared/Button/Button'\n\nconst maxLength50 = maxLenghtCreator(50)\n\nconst Dialogs = ({ dialogsPage, sendMessage, messageId }) => {\n  const {\n    dialogs,\n    messages,\n  } = dialogsPage\n\n  const addNewMessage = (values) => {\n    sendMessage(messageId, values.newMessageBody)\n  }\n\n  return (\n      <div className={styles.dialogsItem}>\n        <div className={styles.dialogs}>\n          {dialogs.map((d) =>\n              <DialogItem key={d.id} name={d.name} id={d.id} />\n          )}\n        </div>\n        <div className={styles.messages}>\n          {messageId && messages\n              .filter(m => m.id === messageId)\n              .map(({ messages }) => messages.map(message => (\n                      <Message\n                          key={message.id}\n                          message={message.message}\n                          id={message.id}\n                          friend={message.type === 'from'}\n                      />\n                  ))\n              )\n          }\n        </div>\n        <div>\n          <AddMessageFormRedux onSubmit={addNewMessage} />\n        </div>\n      </div>\n  )\n}\n\nconst AddMessageForm = ({ handleSubmit }) => {\n  return (\n      <form onSubmit={handleSubmit}>\n        <Field\n            component={Textarea}\n            validate={[required, maxLength50]}\n            placeholder='Enter your Message'\n            name={'newMessageBody'}\n        />\n        <Button text={'SEND'} type={'submit'}/>\n      </form>\n  )\n}\n\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\n\nexport default Dialogs","import { sendMessageCreator } from '../redux/dialogsReducer'\nimport Dialogs from './Dialogs'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { withAuthRedirect } from '../Hoc/withAuthRedirect'\n\nlet mapStateToProps = ({ dialogs }) => {\n  return {\n    dialogsPage: dialogs,\n  }\n}\n\nlet mapStateToDispatch = (dispatch) => {\n  return {\n    sendMessage: (messageId, newMessageBody) => {\n      dispatch(sendMessageCreator(messageId, newMessageBody))\n    }\n  }\n}\n\nexport default compose(\n    connect(\n      mapStateToProps, mapStateToDispatch\n    ),\n    withAuthRedirect\n)(Dialogs)"],"sourceRoot":""}